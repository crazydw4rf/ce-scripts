<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <Forms>
    <CETrainer Class="TTrainerForm" Encoding="Ascii85">=Ul:N):Zf/6]RC%OlYSB:#}vD26zR;b)##J[SoXKL$OaAPZTL5D@1{MSo17A1IxY*dt?uIlR%ka((s.}^+TV5qazz391UOH$5?b?ff#bJaQtA=yElPLX=_.WMv!04r1]vMV!l,L[WL{OGxK_@:cO^g2A=x2IJI1F5WdBOw-_;PmQR+4:d9D^-S:q?Ox9_y=$:@xP}:w):L=9Uv2kOC%%^8nt6P24.(g6DyvR#g;%o#IsQ[TUk@s=3QbHlKk(FExS/,mpK[;}KAog$:SD[f$ek2Ccff#LsY[%.S3{]p[fMYN6E]o^PgzngswLPlrS^+^mb:=76106FJr^zqqCwvV8GCdlu/lgAt4#LQ6Os1j8Ko}7[q-@:CLh^96B[)IOC#;xm8,+oSm7J4Ja+R+iWX9K#fXn;Gb{Fk2@$+LIM4wpqOpx[{mp@h]^q.HJ%4bRkl3{/{F.(A!^soMds}zmF8Ilwp;+0}_KuaHx:?nK:-[LRhM_%E?ul3e?x3^.+iTR3UIlKB]@y;CUqvz@aOJ}fs(jnu)6/YSuP;:-[k,K3QXPI%?+Qy?N7o?{=SpsC^57aBS4tcsNVo0U!R!zus1jkh]p!rhKRGD.BS^vV[)/XGlmG.8,R,5),of[q}H^}l=aj96ex;Z,mS=3H^s,mZ;bTm{s1-XLu[;FfS;=h1T*.t.8gf#^/4pt%s$aJQJP!{uMIaStfy8bBea0TdNkEJuN?^;U,^bG9$cNl)nu%v8Q4k=5V?:-Ibywn2iaIH9g)oDvs/Adq].q-y[X*}[{;iw:i36o%#.])Ox[b!/kw?yY{eAxs}#EVFsruh_{yaOTkM}$bJ^$b(@$y_wa$h[3H$h?+:lexBmHnb:5GX/,NEiO2N^VUnuuT62Q$+*mmbwZ^/-BE}N2OlTiU_TDC,soLmqUdc;]=4meGvaa%pHU-nd:=}rJdW?/yx397^.c$?Q3?[E72:AG-*h9p;E2051JRv=:rVD47BvNrew#nQK**hC)SDukZ_l@n_8=r$;QqhnhVO;!KUFOKg4Pvl:OwL*Hg[r)]UL</CETrainer>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>4</ID>
      <Description>"Scripts"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>60</ID>
          <Description>"Go To Mine Floor"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Harvest Moon The Winds of Anthos.exe
  Version: 
  Date   : 2025-07-30
  Author : Administrator

  This script does blah blah blah
}

[ENABLE]
aobscan(INJECT,89 46 6C 8B 45 ?? 89 85 ???????? 8B 4E ??) // should be unique
alloc(newmem,$1000)
alloc(_floor,4)
registersymbol(_floor)

label(code)
label(return)

_floor:
dd #10

newmem:
mov eax,[_floor]

code:
  mov [esi+6C],eax
  mov eax,[ebp+08]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 46 6C 8B 45 08

unregistersymbol(INJECT)
dealloc(newmem)
dealloc(_floor)

{
// ORIGINAL CODE - INJECTION POINT: 182C1C8D

182C1C65: 8B 85 7C FF FF FF  - mov eax,[ebp-00000084]
182C1C6B: 0F AF D0           - imul edx,eax
182C1C6E: 8B 85 48 FF FF FF  - mov eax,[ebp-000000B8]
182C1C74: 2B CA              - sub ecx,edx
182C1C76: 89 4C 24 04        - mov [esp+04],ecx
182C1C7A: 89 04 24           - mov [esp],eax
182C1C7D: 39 00              - cmp [eax],eax
182C1C7F: E8 98 05 4D 03     - call 1B79221C
182C1C84: 8B 46 6C           - mov eax,[esi+6C]
182C1C87: 03 85 7C FF FF FF  - add eax,[ebp-00000084]
// ---------- INJECTING HERE ----------
182C1C8D: 89 46 6C           - mov [esi+6C],eax
// ---------- DONE INJECTING  ----------
182C1C90: 8B 45 08           - mov eax,[ebp+08]
182C1C93: 89 85 48 FF FF FF  - mov [ebp-000000B8],eax
182C1C99: 8B 4E 6C           - mov ecx,[esi+6C]
182C1C9C: 8B 56 28           - mov edx,[esi+28]
182C1C9F: 8B C2              - mov eax,edx
182C1CA1: 39 00              - cmp [eax],eax
182C1CA3: 8B 85 48 FF FF FF  - mov eax,[ebp-000000B8]
182C1CA9: 8B 52 2C           - mov edx,[edx+2C]
182C1CAC: 3B CA              - cmp ecx,edx
182C1CAE: 0F 9C C1           - setl cl
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry NoCheckbox="1">
              <ID>61</ID>
              <Description>"No description"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>_floor</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>45</ID>
          <Description>"Inf Gold"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Harvest Moon The Winds of Anthos.exe
  Version: 
  Date   : 2025-07-30
  Author : Administrator

  This script does unlimited gold
}

[ENABLE]

aobscan(INJECT,89 46 ?? 8B 4E ?? B8 ????????) // should be unique
alloc(newmem,$1000)
alloc(gold,4)
registersymbol(gold)

label(code)
label(return)

gold:
dd #1000

newmem:
add eax,[gold]

code:
  mov [esi+20],eax
  mov ecx,[esi+20]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 46 20 8B 4E 20

unregistersymbol(INJECT)
dealloc(newmem)
dealloc(gold)

{
// ORIGINAL CODE - INJECTION POINT: 43174C49

43174C31: 8B EC              - mov ebp,esp
43174C33: 56                 - push esi
43174C34: 83 EC 24           - sub esp,24
43174C37: 8B 75 08           - mov esi,[ebp+08]
43174C3A: 8B 46 20           - mov eax,[esi+20]
43174C3D: 03 45 0C           - add eax,[ebp+0C]
43174C40: 33 D2              - xor edx,edx
43174C42: 33 C9              - xor ecx,ecx
43174C44: 3B D0              - cmp edx,eax
43174C46: 0F 4F C1           - cmovg eax,ecx
// ---------- INJECTING HERE ----------
43174C49: 89 46 20           - mov [esi+20],eax
// ---------- DONE INJECTING  ----------
43174C4C: 8B 4E 20           - mov ecx,[esi+20]
43174C4F: B8 FF C9 9A 3B     - mov eax,3B9AC9FF
43174C54: 81 F9 FF C9 9A 3B  - cmp ecx,3B9AC9FF
43174C5A: 0F 4C C1           - cmovl eax,ecx
43174C5D: 89 46 20           - mov [esi+20],eax
43174C60: 89 34 24           - mov [esp],esi
43174C63: E8 58 00 00 00     - call 43174CC0
43174C68: 8B 46 20           - mov eax,[esi+20]
43174C6B: 8B 0D 70 F7 AF 16  - mov ecx,[16AFF770]
43174C71: 39 09              - cmp [ecx],ecx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry NoCheckbox="1">
              <ID>46</ID>
              <Description>"Increased Gold"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>gold</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Speedhack"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
aobscanmodule(aobtimescale,UnityPlayer.dll,D9 80 EC 00 00 00 C3) // should be unique
alloc(newmem,$1000)
label(code)
label(return)
label(gamespeed_f)
registersymbol(gamespeed_f)

newmem:
  cmp [eax+000000EC],0
  jle short code
  cmp [gamespeed_f],-1
  jle short code
  cmp [gamespeed_f],0
  je short @f
  fld [gamespeed_f]
  fstp [eax+000000EC]
  jmp short code
@@:
  mov [eax+000000EC],(float)1
  mov [gamespeed_f],-1
code:
  fld dword ptr [eax+000000EC]
  jmp return

newmem+200:
gamespeed_f:
dd -1

aobtimescale:
  jmp newmem
  nop
return:
registersymbol(aobtimescale)

[DISABLE]
aobtimescale:
  db D9 80 EC 00 00 00
dealloc(newmem)

</AssemblerScript>
          <CheatEntries>
            <CheatEntry NoCheckbox="1">
              <ID>1</ID>
              <Description>"Game Speed"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>gamespeed_f</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"Unlimited Item Consume"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Harvest Moon The Winds of Anthos.exe (paused)
  Version: 
  Date   : 2025-07-30
  Author : Administrator

  This script does blah blah blah
}

[ENABLE]
aobscan(INJECT,89 48 0C 8B 46 10 40 89 46 10 8D 65 FC 5E C9 C3 E8 ????????) // should be unique
alloc(newmem,$1000)
alloc(increased_value,4)
registersymbol(increased_value)

label(code)
label(return)

increased_value:
dd (int)2

newmem:
cmp [eax+0C],(int)90
jge code
add ecx,[increased_value]

code:
  mov [eax+0C],ecx
  mov eax,[esi+10]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 48 0C 8B 46 10

unregistersymbol(INJECT)
dealloc(newmem)
dealloc(increased_value)

{
// ORIGINAL CODE - INJECTION POINT: 1EAEE777

1EAEE759: C1 E1 04        - shl ecx,04
1EAEE75C: 03 C1           - add eax,ecx
1EAEE75E: 05 10 00 00 00  - add eax,00000010
1EAEE763: 8B 4D 10        - mov ecx,[ebp+10]
1EAEE766: 89 08           - mov [eax],ecx
1EAEE768: 8B 4D 14        - mov ecx,[ebp+14]
1EAEE76B: 89 48 04        - mov [eax+04],ecx
1EAEE76E: 8B 4D 18        - mov ecx,[ebp+18]
1EAEE771: 89 48 08        - mov [eax+08],ecx
1EAEE774: 8B 4D 1C        - mov ecx,[ebp+1C]
// ---------- INJECTING HERE ----------
1EAEE777: 89 48 0C        - mov [eax+0C],ecx
// ---------- DONE INJECTING  ----------
1EAEE77A: 8B 46 10        - mov eax,[esi+10]
1EAEE77D: 40              - inc eax
1EAEE77E: 89 46 10        - mov [esi+10],eax
1EAEE781: 8D 65 FC        - lea esp,[ebp-04]
1EAEE784: 5E              - pop esi
1EAEE785: C9              - leave 
1EAEE786: C3              - ret 
1EAEE787: E8 C8 58 FD F7  - call 16AC4054
1EAEE78C: EB BC           - jmp 1EAEE74A
1EAEE78E: 6A 47           - push 47
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry NoCheckbox="1">
              <ID>40</ID>
              <Description>"Increase Value"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>4 Bytes</VariableType>
              <Address>increased_value</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"Inf Stamina"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : Harvest Moon The Winds of Anthos.exe
  Version: 
  Date   : 2025-07-30
  Author : Administrator

  This script does unlimited stamina
}

[ENABLE]

aobscan(INJECT,89 7E 2C 8B 46 0C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
cmp edi,(int)450
jg code
add edi,(int)50

code:
  mov [esi+2C],edi
  mov eax,[esi+0C]
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 7E 2C 8B 46 0C

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1ECA7013

1ECA6FED: 8B C0                    - mov eax,eax
1ECA6FEF: E8 4C 00 00 00           - call 1ECA7040
1ECA6FF4: 8D 4D E8                 - lea ecx,[ebp-18]
1ECA6FF7: C7 44 24 08 C4 0B 00 00  - mov [esp+08],00000BC4
1ECA6FFF: 89 4C 24 04              - mov [esp+04],ecx
1ECA7003: 89 04 24                 - mov [esp],eax
1ECA7006: 39 00                    - cmp [eax],eax
1ECA7008: 8D 6D 00                 - lea ebp,[ebp+00]
1ECA700B: E8 24 00 00 00           - call 1ECA7034
1ECA7010: 83 EC 04                 - sub esp,04
// ---------- INJECTING HERE ----------
1ECA7013: 89 7E 2C                 - mov [esi+2C],edi
// ---------- DONE INJECTING  ----------
1ECA7016: 8B 46 0C                 - mov eax,[esi+0C]
1ECA7019: 8B D8                    - mov ebx,eax
1ECA701B: 85 C0                    - test eax,eax
1ECA701D: 75 02                    - jne 1ECA7021
1ECA701F: EB 0A                    - jmp 1ECA702B
1ECA7021: 89 7C 24 04              - mov [esp+04],edi
1ECA7025: 89 1C 24                 - mov [esp],ebx
1ECA7028: FF 53 0C                 - call dword ptr [ebx+0C]
1ECA702B: 8D 65 F4                 - lea esp,[ebp-0C]
1ECA702E: 5E                       - pop esi
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>48</ID>
      <Description>"Gold"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>234A9BC0</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>57</ID>
      <Description>"Mine Floor"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>4E4A472C</Address>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Shipping Total Price:mov [eax],ecx</Description>
      <AddressString>418EB495</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>10</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>08</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>40</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Stamina Write :mov [esi+2C],edi</Description>
      <AddressString>1ECA7013</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>83</Byte>
        <Byte>EC</Byte>
        <Byte>04</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>7E</Byte>
        <Byte>2C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>0C</Byte>
        <Byte>8B</Byte>
        <Byte>D8</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Item Collect or Consume :mov [eax+0C],ecx</Description>
      <AddressString>1EAEE777</AddressString>
      <Before>
        <Byte>48</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>4D</Byte>
        <Byte>1C</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>0C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>10</Byte>
        <Byte>40</Byte>
        <Byte>89</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Gold write v1 :mov [esi+20],eax</Description>
      <AddressString>43174C49</AddressString>
      <Before>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>0F</Byte>
        <Byte>4F</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>20</Byte>
        <Byte>B8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Gold :mov [esi+20],eax</Description>
      <AddressString>180650D9</AddressString>
      <Before>
        <Byte>3B</Byte>
        <Byte>D0</Byte>
        <Byte>0F</Byte>
        <Byte>4F</Byte>
        <Byte>C1</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>20</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>4E</Byte>
        <Byte>20</Byte>
        <Byte>B8</Byte>
        <Byte>FF</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Mine Floor write :mov [esi+6C],eax</Description>
      <AddressString>182C1C8D</AddressString>
      <Before>
        <Byte>85</Byte>
        <Byte>7C</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
        <Byte>FF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>46</Byte>
        <Byte>6C</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>08</Byte>
        <Byte>89</Byte>
        <Byte>85</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>89 48 0C 8B 46 10 40 89 46 10 8D 65 FC 5E C9 C3 E8 ????????

max stamina 5 heart is 500 in 4 byte integer
</Comments>
  <LuaScript>
--TRAINERGENERATORSTART--
--This is autogenerated code. Changing code in this block will
--get erased and rewritten if you regenerate the trainer code

--Uncomment the following line if this is a Cheat Table format trainer and you don't want CE to show (Tip, save as .CETRAINER alternatively)
--hideAllCEWindows()

RequiredCEVersion=7.6
if (getCEVersion==nil) or (getCEVersion()&lt;RequiredCEVersion) then
  messageDialog('Please install Cheat Engine '..RequiredCEVersion, mtError, mbOK)
  closeCE()
end
addresslist=getAddressList()


CETrainer.SEPERATOR.Visible=false

getAutoAttachList().add("Harvest Moon The Winds of Anthos.exe")
gPlaySoundOnAction=false
CETrainer.fixDPI() --remove this if you have already taken care of DPI issues yourself
CETrainer.show()
function AboutClick()
  showMessage(gAboutText)
end
gAboutText=[[This trainer was made by Cheat 
Engine
www.cheatengine.org]]

function CloseClick()
  --called by the close button onClick event, and when closing the form
  closeCE()
  return caFree --onClick doesn't care, but onClose would like a result
end

--TRAINERGENERATORSTOP--
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>1F09E777</Address>
      <Comment>Start here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>28223037</Address>
      <Comment>Start here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>2822E72F</Address>
      <Comment>Start here
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
